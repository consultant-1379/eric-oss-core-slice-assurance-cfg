#
# COPYRIGHT Ericsson 2021
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "eric-oss-core-slice-assurance-cfg.fullname" . }}
  labels:
  {{- include "eric-oss-core-slice-assurance-cfg.labels" . | nindent 4 }}
  annotations:
  {{- include "eric-oss-core-slice-assurance-cfg.prometheus" . | nindent 4 }}
spec:
{{- $g := fromJson (include "eric-oss-core-slice-assurance-cfg.global" .) -}}
{{- if not .Values.autoScaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "eric-oss-core-slice-assurance-cfg.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: {{ .Values.updateStrategy.type | quote }}
    {{- if and (eq .Values.updateStrategy.type "RollingUpdate") .Values.updateStrategy.rollingUpdate }}
    rollingUpdate:
      maxUnavailable: {{ .Values.updateStrategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.updateStrategy.rollingUpdate.maxSurge }}
    {{- end }}
  template:
    metadata:
      labels:
      {{- include "eric-oss-core-slice-assurance-cfg.labels-and-logStream" . | indent 8 }}
      annotations:
      {{- include "eric-oss-core-slice-assurance-cfg.prometheus-and-container" . | nindent 8 }}
    spec:
      {{- if include "eric-oss-core-slice-assurance-cfg.pullSecret" . }}
      imagePullSecrets:
        - name: {{ include "eric-oss-core-slice-assurance-cfg.pullSecret" . | quote}}
      {{- end }}
      serviceAccountName: {{ template "eric-oss-core-slice-assurance-cfg.fullname" . }}
      securityContext:
        fsGroup: {{ include "eric-oss-core-slice-assurance-cfg.fsGroup.coordinated" . }}
        {{- include "eric-oss-core-slice-assurance-cfg.seccomp-profile" . | indent 8 }}
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: application-config-volume
          configMap:
            defaultMode: 493
            name: {{ include "eric-oss-core-slice-assurance-cfg.name" . }}-application-config
        - name: resource-config-volume
          projected:
            sources:
            - configMap:
                name: {{ include "eric-oss-core-slice-assurance-cfg.name" . }}-resource-config
            - configMap:
                name: {{ include "eric-oss-core-slice-assurance-cfg.name" . }}-custom-resource-config
                optional: true
        - name: log-control-config
          configMap:
            name: {{ include "eric-oss-core-slice-assurance-cfg.name" . }}-log-config
        {{- if $g.security.tls.enabled }}
        - name: root-ca-volume
          secret:
            optional: true
            secretName: {{ $g.security.tls.trustedInternalRootCa.secret }}
        - name: pm-ca-volume
          secret:
            optional: true
            secretName: eric-pm-server-ca
        - name: server-cert-volume
          secret:
            optional: true
            secretName: {{ include "eric-oss-core-slice-assurance-cfg.fullname" . }}-server-cert
        - name: log-cert-volume
          secret:
            optional: true
            secretName: {{ include "eric-oss-core-slice-assurance-cfg.fullname" . }}-log-cert
        {{- end }}
        {{- include "eric-oss-core-slice-assurance-cfg.db.server-cert-volume" . | nindent 8 }}
        {{- include "eric-oss-core-slice-assurance-cfg.db.client-cert-volume" . | nindent 8 }}
      containers:
        - name: eric-oss-core-slice-assurance-cfg
          image: {{ template "eric-oss-core-slice-assurance-cfg.mainImagePath" . }}
          imagePullPolicy: {{ template "eric-oss-core-slice-assurance-cfg.registryImagePullPolicy" . }}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
            - name: application-config-volume
              mountPath: /config/application-prod.yaml
              subPath: application-prod.yaml
            - name: resource-config-volume
              mountPath: /config/resource
            - name: log-control-config
              mountPath: /logcontrol
            {{- if $g.security.tls.enabled }}
            - name: root-ca-volume
              mountPath: /run/secrets/rootca/truststore
              readOnly: true
            - name: pm-ca-volume
              mountPath: /run/secrets/pmca/truststore
              readOnly: true
            - name: server-cert-volume
              mountPath: /run/secrets/server/keystore
              readOnly: true
            - name: log-cert-volume
              mountPath: /run/secrets/log/keystore
              readOnly: true
            {{- end }}
            {{- include "eric-oss-core-slice-assurance-cfg.db.server-cert-volume-mount" . | nindent 12 }}
            {{- include "eric-oss-core-slice-assurance-cfg.db.client-cert-volume-mount" . | nindent 12 }}
          ports:
            {{- if $g.security.tls.enabled }}
            - name: https-tls
            {{- else }}
            - name: http
            {{- end }}
              containerPort: {{ include "eric-oss-core-slice-assurance-cfg.service-port" . }}
              protocol: TCP
          livenessProbe:
          {{- if (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "livenessProbe" "initialDelaySeconds") }}
            {{ print "initialDelaySeconds: " (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "livenessProbe" "initialDelaySeconds") }}
          {{- end }}
          {{- if (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "livenessProbe" "failureThreshold") }}
            {{ print "failureThreshold: " (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "livenessProbe" "failureThreshold") }}
          {{- end }}
          {{- if (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "livenessProbe" "periodSeconds") }}
            {{ print "periodSeconds: " (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "livenessProbe" "periodSeconds") }}
          {{- end }}
          {{- if (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "livenessProbe" "timeoutSeconds") }}
            {{ print "timeoutSeconds: " (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "livenessProbe" "timeoutSeconds") }}
          {{- end }}
            tcpSocket:
            {{- if $g.security.tls.enabled }}
              port: https-tls
            {{- else }}
              port: http
            {{- end }}
          readinessProbe:
          {{- if (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "readinessProbe" "initialDelaySeconds") }}
            {{ print "initialDelaySeconds: " (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "readinessProbe" "initialDelaySeconds") }}
          {{- end }}
          {{- if (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "readinessProbe" "failureThreshold") }}
            {{ print "failureThreshold: " (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "readinessProbe" "failureThreshold") }}
          {{- end }}
          {{- if (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "readinessProbe" "periodSeconds") }}
            {{ print "periodSeconds: " (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "readinessProbe" "periodSeconds") }}
          {{- end }}
          {{- if (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "readinessProbe" "timeoutSeconds") }}
            {{ print "timeoutSeconds: " (index .Values "probes" "eric-oss-core-slice-assurance-cfg" "readinessProbe" "timeoutSeconds") }}
          {{- end }}
            tcpSocket:
            {{- if $g.security.tls.enabled }}
              port: https-tls
            {{- else }}
              port: http
            {{- end }}
          env:
          - name: JAVA_OPTS
            value: {{ include "eric-oss-core-slice-assurance-cfg.jvmHeapSettings" . }}
          - name: TZ
            value: {{ template "eric-oss-core-slice-assurance-cfg.timezone" . }}
          - name: SERVICE_ID
            value: {{ .Chart.Name }}
          - name: KUBERNETES_MASTER
            value: {{.Values.kubernetesDefaultService.url | quote}}
          {{- include "eric-oss-core-slice-assurance-cfg.loggingEnv" . | indent 10 }}
          - name: DATABASE_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.secret }}
                key: {{ .Values.database.userKey }}
                optional: true
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.secret }}
                key: {{ .Values.database.passwdKey }}
                optional: true
          - name: DATABASE_ADMIN_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.secret }}
                key: {{ .Values.database.dbaUserKey }}
                optional: true
          - name: DATABASE_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.secret }}
                key: {{ .Values.database.dbaPasswdKey }}
                optional: true
          - name: DATABASE_URL
            value: {{ include "eric-oss-core-slice-assurance-cfg.databaseUrl" . }}
          - name: GRACEFUL_SHUTDOWN_TIMEOUT
            value: {{ .Values.terminationGracePeriodSeconds | quote }}
      {{- if .Values.global }}
        {{- if .Values.global.security }}
          {{- if .Values.global.security.tls }}
            {{- if .Values.global.security.tls.enabled }}
          - name: ERIC_LOG_TRANSFORMER_KEYSTORE
            value: /tmp/log/keystore.p12
          - name: ERIC_LOG_TRANSFORMER_KEYSTORE_PW
            valueFrom:
              secretKeyRef:
                name: {{ .Values.keystore.creds.secret | default "eric-oss-core-slice-assurance-cfg-tls-keystore-creds-secret" }}
                key: {{ .Values.keystore.creds.passwdKey }}
          - name: ERIC_LOG_TRANSFORMER_TRUSTSTORE
            value: /tmp/rootca/truststore.p12
          - name: ERIC_LOG_TRANSFORMER_TRUSTSTORE_PW
            valueFrom:
              secretKeyRef:
                name: {{ .Values.keystore.creds.secret | default "eric-oss-core-slice-assurance-cfg-tls-keystore-creds-secret" }}
                key: {{ .Values.keystore.creds.passwdKey }}
          - name: TLS_KEYSTORE_KEY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.keystore.creds.secret | default "eric-oss-core-slice-assurance-cfg-tls-keystore-creds-secret" }}
                key: {{ .Values.keystore.creds.keyPasswdKey }}
          - name: TLS_KEYSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.keystore.creds.secret | default "eric-oss-core-slice-assurance-cfg-tls-keystore-creds-secret" }}
                key: {{ .Values.keystore.creds.passwdKey }}
          - name: CONNECT_MODE
            value: "tls"
            {{- if (eq .Values.service.endpoints.chassisapi.tls.enforced "required") }}
          - name: TLS_MODE
            value: "only_tls"
            {{- if (eq .Values.service.endpoints.chassisapi.tls.verifyClientCertificate "required") }}
          - name: TLS_CA
            value: "ca_path"
            {{- end }}
            {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
          resources:
            requests:
            {{- if (index .Values "resources" "eric-oss-core-slice-assurance-cfg" "requests" "cpu") }}
              cpu: {{ (index .Values "resources" "eric-oss-core-slice-assurance-cfg" "requests" "cpu" | quote) }}
            {{- end }}
            {{- if (index .Values "resources" "eric-oss-core-slice-assurance-cfg" "requests" "memory") }}
              memory: {{ (index .Values "resources" "eric-oss-core-slice-assurance-cfg" "requests" "memory" | quote) }}
            {{- end }}
            {{- if (index .Values "resources" "eric-oss-core-slice-assurance-cfg" "requests" "ephemeral-storage") }}
            {{ println "  ephemeral-storage:" (index .Values "resources" "eric-oss-core-slice-assurance-cfg" "requests" "ephemeral-storage" | quote) }}
            {{- end }}
            limits:
            {{- if (index .Values "resources" "eric-oss-core-slice-assurance-cfg" "limits" "cpu") }}
              cpu: {{ (index .Values "resources" "eric-oss-core-slice-assurance-cfg" "limits" "cpu" | quote) }}
            {{- end }}
            {{- if (index .Values "resources" "eric-oss-core-slice-assurance-cfg" "limits" "memory") }}
              memory: {{ (index .Values "resources" "eric-oss-core-slice-assurance-cfg" "limits" "memory" | quote) }}
            {{- end }}
            {{- if (index .Values "resources" "eric-oss-core-slice-assurance-cfg" "limits" "ephemeral-storage") }}
            {{ println "  ephemeral-storage:" (index .Values "resources" "eric-oss-core-slice-assurance-cfg" "limits" "ephemeral-storage" | quote) }}
            {{- end }}

      {{- if (or .Values.nodeSelector $g.nodeSelector) }}
      nodeSelector: {{- include "eric-oss-core-slice-assurance-cfg.nodeSelector" . | indent 8 }}
      {{- end }}

      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds:
        {{- include "eric-oss-core-slice-assurance-cfg.terminationGracePeriodSeconds" . | nindent 8 }}
      {{- end }}

      {{- if .Values.tolerations }}
      tolerations:
        {{- include "eric-oss-core-slice-assurance-cfg.merge-tolerations" (dict "root" .) | nindent 8 }}
      {{- end }}

      {{- if (index .Values "podPriority" "eric-oss-core-slice-assurance-cfg" "priorityClassName") }}
      priorityClassName: {{ (index .Values "podPriority" "eric-oss-core-slice-assurance-cfg" "priorityClassName") }}
      {{- end }}

      {{- with .Values.topologySpreadConstraints.deployment }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if eq .Values.affinity.podAntiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ include "eric-oss-core-slice-assurance-cfg.name" . }}
            topologyKey: {{ .Values.affinity.topologyKey }}
      {{- else if eq .Values.affinity.podAntiAffinity  "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ include "eric-oss-core-slice-assurance-cfg.name" . }}
              topologyKey: {{ .Values.affinity.topologyKey }}
      {{- end }}
