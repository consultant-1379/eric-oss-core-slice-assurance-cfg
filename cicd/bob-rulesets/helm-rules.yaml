modelVersion: 2.0


description: "Helm Build Rules"


import:
  images: docker-images.yaml
  common: common-rules.yaml


properties:
  - helm-adp-dr-check-docker-flags: "${helm-docker-extra-flags}"
  - helm-adp-release-docker-flags:
      --env HELM_USER
      --env HELM_TOKEN
      ${helm-docker-extra-flags}

  - helm-docker-extra-flags: " "
  - helm-extra-flags: " "

  # Helm properties
  - chart-app-version: ${var.chart-app-version}
  - chart-name: ${var.chart-name}

  - chart-version: ${var.chart-version}

  - helm-design-rules-skip: ${var.helm-design-rules-skip}

  - chart-source-directory: ${var.chart-source-directory}
  - chart-output-directory: ${var.chart-output-directory}
  - chart-file-drop: ${chart-output-directory}/${chart-name}-${chart-version}.tgz

  - chart-file: ${chart-file-drop}

  - helm-repository: ${env.HELM_REPOSITORY}
  - helm-repository-username: ${env.HELM_USER}
  - helm-repository-password: ${env.HELM_TOKEN}
  - helm-repositories-file: .bob/.helm/repositories.yaml
  - helm-virtual-repository: ${helm-repository}
  - helm-dr-reports-directory: ${var.helm-dr-reports-directory}
  - chart-ci-artifacts-directory: ${common.ci-artifacts-directory}/helm


var:
  - chart-name
  - chart-output-directory
  - chart-source-directory
  - chart-version
  - chart-app-version
  - helm-design-rules-skip
  - helm-design-rules-status-code
  - helm-dr-reports-directory


env:
  - HELM_REPOSITORY
  - HELM_TOKEN (default=${common.arm-token})
  - HELM_USER (default=${common.arm-user})


rules:
  init:
    - task: init-variables
      cmd:
        - echo "" > .bob/var.chart-app-version
        - echo "${chart-app-version}" > .bob/var.chart-app-version

        - echo "" > .bob/var.chart-name
        - echo "${chart-name}" > .bob/var.chart-name
        - echo -n "helm/${chart-name}" > .bob/var.chart-source-directory
        - echo -n "${chart-source-directory}" > .bob/var.chart-source-directory

        - echo -n "${common.ci-build-directory}/helm" > .bob/var.chart-output-directory
        - echo -n "${chart-output-directory}" > .bob/var.chart-output-directory

        - echo "" > .bob/var.chart-version
        - echo "${chart-version}" > .bob/var.chart-version

        - echo "" > .bob/var.helm-design-rules-skip
        - echo "${helm-design-rules-skip}" > .bob/var.helm-design-rules-skip

        - echo "${common.ci-build-directory}/helm/adp_dr" > .bob/var.helm-dr-reports-directory
        - echo "${helm-dr-reports-directory}" > .bob/var.helm-dr-reports-directory

        - mkdir -p ${chart-ci-artifacts-directory}


  lint:
    - task: helm-lint
      docker-image: images.adp-release-auto
      docker-flags:
        - ${helm-adp-release-docker-flags}
      cmd: helm lint ${chart-file} ${helm-extra-flags}


  design-rule:
    - task: helm-check-dr
      docker-image: images.adp-helm-dr-check
      docker-flags:
        - ${helm-adp-dr-check-docker-flags}
      cmd: /bin/bash -c '
              helm-dr-check ${helm-design-rules-skip} --helm-chart ${chart-file} --output ${helm-dr-reports-directory} ${helm-extra-flags};
              echo $? > .bob/var.helm-design-rules-status-code; '
    - task: archive-reports
      cmd:
        - mkdir -p ${common.ci-html-reports-directory}/helm
        - cp -f ${helm-dr-reports-directory}/design-rule-check-report.html ${common.ci-html-reports-directory}/helm/helm_adp_dr_check_report.html;
        - tar -zcf ${chart-ci-artifacts-directory}/helm_adp_dr_check_report.tar.gz ${helm-dr-reports-directory}
        - '[ "${var.helm-design-rules-status-code}" == "0" ]'


  package:
    - task: helm-package
      docker-image: images.adp-release-auto
      docker-flags:
        - ${helm-adp-release-docker-flags}
      cmd:
        - helm-package
            --workdir ${chart-output-directory}
            --folder ${chart-source-directory}
            --version ${chart-version}
            --app-version ${chart-app-version}
            ${helm-extra-flags}
        - cp ${chart-output-directory}/*.tgz ${chart-ci-artifacts-directory}/


  push:
    - task: helm-push
      docker-image: images.adp-release-auto
      docker-flags:
        - ${helm-adp-release-docker-flags}
      cmd: upload_helm_package
        --chart-repo ${helm-repository}
        --virtual-repo ${helm-virtual-repository}
        --chart-filename ${chart-file}
        --helm-user ${env.HELM_USER}
        --helm-token ${env.HELM_TOKEN}
        ${helm-extra-flags}


  repositories-add:
    - task: create-repositories
      condition: conditions:repositories-file-missing
      cmd:
        - mkdir -p $(dirname ${helm-repositories-file})
        - echo "repositories:" > ${helm-repositories-file}
    - task: add-repositories
      cmd: |
          echo " - name: $(basename ${helm-repository})" >> ${helm-repositories-file};
          if [ ! -z "${helm-repository-password}" ] && [ ! -z "${helm-repository-username}" ]; then
            echo "   password: ${helm-repository-password}" >> ${helm-repositories-file};
            echo "   username: ${helm-repository-username}"  >> ${helm-repositories-file};
          fi;
          echo "   url: ${helm-repository}"  >> ${helm-repositories-file};


  conditions:
    - task: repositories-file-missing
      cmd: "[ ! -f ${helm-repositories-file} ]"
