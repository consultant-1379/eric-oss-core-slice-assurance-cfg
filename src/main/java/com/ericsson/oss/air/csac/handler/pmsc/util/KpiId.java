/*******************************************************************************
 * COPYRIGHT Ericsson 2023
 *
 * The copyright to the computer program(s) herein is the property of
 * Ericsson Inc. The programs may be used and/or copied only with written
 * permission from Ericsson Inc. or in accordance with the terms and
 * conditions stipulated in the agreement/contract under which the
 * program(s) have been supplied.
 ******************************************************************************/

package com.ericsson.oss.air.csac.handler.pmsc.util;

import java.util.List;
import java.util.Locale;
import java.util.UUID;

import com.ericsson.oss.air.util.codec.Digest;

/**
 * This class is responsible for providing PMSC-specific generated Ids.  PMSC configuration includes two fields that have strict uniqueness,
 * character, and length restrictions:
 *
 * <ul>
 *     <li>KPI instance name</li>
 *     <li>KPI table alias</li>
 * </ul>
 *
 * This class will generate Ids constrained to arbitrary lengths with the exception of the name, which is a specialized Id that is always
 * constrained to the maximum supported by PM Stats Calculator (56 characters).
 */
public class KpiId {

    private static final int MAX_ALIAS_LENGTH = 38;

    private static final int MAX_NAME_LENGTH = 56;

    public static final String NAME_PREFIX = "csac";

    public static final String STRING_JOINER_DELIMITER = "_";

    private static final String ID_PREFIX = "c";

    private final int maxIdLength;

    /**
     * Returns the maximum alias length permitted by PMSC.
     *
     * @return the maximum alias length permitted by PMSC
     */
    public static int getMaxAliasLength() {
        return MAX_ALIAS_LENGTH;
    }

    /**
     * Returns an instance of {@code KpiId} using the default maximum alias length.
     */
    public KpiId() {
        this(MAX_ALIAS_LENGTH);
    }

    /*
     * (non-javadoc)
     *
     * Returns a KpiId instance with the specified maximum id length
     */
    private KpiId(final int length) {
        this.maxIdLength = length;
    }

    /**
     * Returns the maximum length of an Id generated by this {@code KpiId} instance.  Aliases and names have specific length limits prescribed by PM
     * Stats Calculator, so this value is ignored when generating specialized Ids.
     *
     * @return the maximum length of an Id generated by this {@code KpiId} instance
     */
    public int getIdLength() {
        return this.maxIdLength;
    }

    /**
     * Returns a generated Id.  The Id is generated using the provided Id elements.  The format depends on the length of the generated Id. If the
     * generated Id length will be less than the maximum Id length of this {@code KpiId} instance, the Id will be in the form
     *
     * <pre>csac_element1_element2_etc</pre>
     *
     * If the generated Id length will be greater than the maximum, a fixed length hash is returned prefixed by the character 'c'.
     *
     * @param idElements
     *         elements to use when generating the Id
     * @return a generated Id. The length of the Id is constrained to the maximum length set for this {@code KpiId}.
     */
    public String generateId(final List<String> idElements) {

        final String rawId = String.join(STRING_JOINER_DELIMITER, idElements).toLowerCase(Locale.ROOT);

        final String generatedId = (isValidLength(rawId))
                ? rawId
                : (ID_PREFIX + new Digest().getDigestAsHex(idElements));

        return trimId(generatedId);
    }

    /**
     * Returns a {@code KpiIdGenerator} with the specified length.  The length will be applied only when generating Ids.
     *
     * @param length
     *         maximum length for the generated Id
     * @return a {@code KpiIdGenerator} with the specified length
     */
    public KpiId maxLength(final int length) {
        return new KpiId(length);
    }

    /**
     * Returns a specialized Id as a unique alias.  The alias is used in PM Stats Calculator to generate KPI output table names.
     *
     * @param aliasElements
     *         elements used to generate the Id
     * @return a specialized Id as a unique alias
     */
    public String generateAlias(final List<String> aliasElements) {
        return new KpiId(MAX_ALIAS_LENGTH).generateId(aliasElements);
    }

    /**
     * Returns a specialized Id as a globally unique KPI instance name in the form
     *
     * <pre>csac_&lt;UUID&gt;</pre>
     *
     * For example {@code csac_2e1505d0_e8e5_438c_aa82_a06d170f5016}.
     *
     * @return a globally unique KPI instance name in the form
     */
    public String generateKpiName() {
        final String generatedName = NAME_PREFIX + STRING_JOINER_DELIMITER + UUID.randomUUID();
        return trimId(generatedName.replaceAll("(\\s|-)", "_"), MAX_NAME_LENGTH);
    }

    /*
     * (non-javadoc)
     *
     * Trims the provided Id to the maximum Id length for this Id generator.
     */
    String trimId(final String rawId) {
        return trimId(rawId, this.maxIdLength);
    }

    /*
     * (non-javadoc)
     *
     * Trims the provided Id to the length specified.
     */
    static String trimId(final String rawId, final int length) {
        return rawId.length() > length ? rawId.substring(0, length) : rawId;
    }

    boolean isValidLength(final String idString) {
        return idString.length() <= this.maxIdLength;
    }
}
